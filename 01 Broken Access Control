## 1. Broken Access Control
      Overview: When applications fail to enforce proper authorisation, users can access or modify resources beyond their intended permissions.
      Impact: Exposure of sensitive data, account takeover or full system compromise.
      Attack vectors & remediation:
        ### a. Insecure Direct Object Reference (IDOR)
               Vector: Changing object IDs to access another userâ€™s data (id=102 instead of id=101)
               Remediation: Use indirect references; validate object ownership server-side
        ### b. Parameter Tampering
               Vector: Modifying request parameters (role=user -> role=admin)
               Remediation: Validate parameters on server; avoid trusting client-side values.
        ### c. Missing Authorisation Checks
               Vector: Sensitive endpoints accessible without proper validation
               Remediation: Centralise and enforce authorisation at every request
        ### d. Force Browsing
               Vector: Accessing hidden/unauthorised URLs directly (e.g. /admin)
               Remediation:  Enforce server-side authorisation, deny by default, restrict sensitive paths
        ### e. Privilege Escalation:
               Vector: Exploiting flaws to gain higher role privileges (user -> admin)
               Remediation: Apply RBAC/ABAC strictly, enforce least privilege

